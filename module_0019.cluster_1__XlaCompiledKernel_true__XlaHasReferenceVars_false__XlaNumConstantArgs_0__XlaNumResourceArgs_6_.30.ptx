//
// Generated by LLVM NVPTX Back-End
//

.version 6.0
.target sm_61
.address_size 64

	// .globl	fusion_5
.visible .global .align 128 .b8 buffer_for_constant_7[8] = {1, 0, 0, 0, 0, 0, 0, 0};

.visible .entry fusion_5(
	.param .u64 fusion_5_param_0,
	.param .u64 fusion_5_param_1,
	.param .u64 fusion_5_param_2,
	.param .u64 fusion_5_param_3,
	.param .u64 fusion_5_param_4,
	.param .u64 fusion_5_param_5,
	.param .u64 fusion_5_param_6
)
.reqntid 2, 1, 1
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<2>;
	.reg .f32 	%f<5>;
	.reg .b64 	%rd<16>;

	ld.param.u64 	%rd1, [fusion_5_param_0];
	ld.param.u64 	%rd2, [fusion_5_param_5];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [fusion_5_param_1];
	ld.param.u64 	%rd5, [fusion_5_param_4];
	cvta.to.global.u64 	%rd6, %rd5;
	ld.param.u64 	%rd7, [fusion_5_param_2];
	ld.param.u64 	%rd8, [fusion_5_param_3];
	cvta.to.global.u64 	%rd9, %rd8;
	cvta.to.global.u64 	%rd10, %rd7;
	cvta.to.global.u64 	%rd11, %rd4;
	cvta.to.global.u64 	%rd12, %rd1;
	mov.u32 	%r1, %tid.x;
	setp.ne.s32 	%p1, %r1, 0;
	selp.b64 	%rd13, %rd11, %rd9, %p1;
	selp.b64 	%rd14, %rd12, %rd10, %p1;
	ld.global.nc.f32 	%f1, [%rd13];
	setp.eq.f32 	%p2, %f1, 0f00000000;
	ld.global.nc.f32 	%f2, [%rd14];
	div.full.f32 	%f3, %f2, %f1;
	selp.f32 	%f4, 0f00000000, %f3, %p2;
	selp.b64 	%rd15, %rd3, %rd6, %p1;
	st.global.f32 	[%rd15], %f4;
	ret;

}
	// .globl	fusion_4
.visible .entry fusion_4(
	.param .u64 fusion_4_param_0,
	.param .u64 fusion_4_param_1,
	.param .u64 fusion_4_param_2,
	.param .u64 fusion_4_param_3,
	.param .u64 fusion_4_param_4
)
.reqntid 2, 1, 1
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<13>;

	ld.param.u64 	%rd1, [fusion_4_param_0];
	ld.param.u64 	%rd2, [fusion_4_param_3];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [fusion_4_param_1];
	ld.param.u64 	%rd5, [fusion_4_param_2];
	cvta.to.global.u64 	%rd6, %rd5;
	cvta.to.global.u64 	%rd7, %rd4;
	cvta.to.global.u64 	%rd8, %rd1;
	mov.u32 	%r1, %tid.x;
	setp.ne.s32 	%p1, %r1, 0;
	selp.b64 	%rd9, %rd7, %rd8, %p1;
	ld.global.nc.u64 	%rd10, [%rd9];
	add.s64 	%rd11, %rd10, 1;
	selp.b64 	%rd12, %rd3, %rd6, %p1;
	st.global.u64 	[%rd12], %rd11;
	ret;

}
